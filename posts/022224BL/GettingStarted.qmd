---
title: "How to write a blog post with R or Python code?"
author: "Brian Leung"
date: "2024-02-21"
categories: [news, code, R, Python]
message: false
warning: false
---

Welcome to P-DAWG! This post introduces us to how to use Quarto (`.qmd`) to write a blog-style document that integrates `R` or `Python` code with text!

## Quarto (`.qmd`) is just like RMarkdown (`.rmd`)!

You can open a new Quarto Document (`.qmd`) in Rstudio and choose `HTML` as the format. This works just like a traditional RMarkdown file (`.rmd`).

You can copy and paste the following code to the preamble (i.e., top of the document) and fill out the details:

```         
---
title: "Give it a nice title"
author: "Your good name"
date: "today is..."
categories: [tag1, tag2, tag3...] 
message: false 
warning: false
---
```

## Working with `R` code

Inside the `.qmd` document, you can type text anywhere you like. To insert a code, type "/" to select options from a drop-down menu (if you are using Visual editor mode). For example, I can insert the following `R` code chunk:

```{r}
library(tidyverse)
```

Then you can perform data analysis as usual:

```{r}
data(iris)

iris %>%
  group_by(Species) %>%
  summarize(across(where(is.numeric), mean))
```

Visualization is also easy:

```{r}
ggplot(iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
  geom_point() +
  theme_minimal()
```

## Working with `Python` code

Quarto document has the advantage of being able to run `Python` code at the same time. But this does requies some knowledge about the language, and especially how virtual environment works for managing packages.

To do that from a `RStudio` environment, you have to first install `reticulate` package in R by running `install.packages("reticulate").`

After loading `reticulate`, you can create a virtual environment and install the required `Python` packages/modules:

```{r}
library(reticulate)

# create a new environment 
virtualenv_create("r-reticulate")

# packages to install 
packages <- c("numpy", "pandas")

# install packages to the environment
virtualenv_install("r-reticulate", packages)
```

You might have to go to `Options > Python > Virtual Environment`, and then select the correct interpreter.

Now, you can run `Python` code! One advantage of doing it in the Quarto document (with `reticulate` package) is that you can reference and transport `R` object directly into the `Python` environment by calling `r.object_name:`

```{python}
import numpy as np
import pandas as pd

iris = r.iris
iris_groupMean = iris.groupby(['Species']).mean()
iris_groupMean

```

You can do the reverse by referencing the `Python` object in the `R` environment by calling `py$object_name`:

```{r}
glimpse(py$iris_groupMean) # back to R code
```

## Conclusion

Quarto document `.qmd` gives us an easy way to write a blog post that seamlessly integrate text narration with code. As you as you submit a *minimally reproducible* Quarto document, your post can be published at no time.

Furthermore, the `reticulate` package creates a nice interface that accommodates both `R` and `Python` code in the same document. Many state-of-the-art models and packages in NLP are written in `Python`. Hopefully, this will encourage `R` users to take advantage of `Python` modules in a familiar environment.
