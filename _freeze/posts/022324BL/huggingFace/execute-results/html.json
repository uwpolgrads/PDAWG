{
  "hash": "23d00eae568abf9a6a74b618265b47c1",
  "result": {
    "markdown": "---\ntitle: \"Give it a nice title\"\nauthor: \"Brian Leung\"\ndate: \"2024-02-23\"\ncategories: [code, Python, hugging face, text classification] \nmessage: false \nwarning: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\n\nvirtualenv_create(\"r-reticulate\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nvirtualenv: r-reticulate\n```\n:::\n\n```{.r .cell-code}\npackages <- c(\"transformers\", \"tensorflow\", \"torch\", \"torchvision\", \"torchaudio\")\n\nvirtualenv_install(\"r-reticulate\", packages)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nUsing virtual environment 'r-reticulate' ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npy_config()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npython:         /Users/brianleung/.virtualenvs/r-reticulate/bin/python\nlibpython:      /Users/brianleung/.pyenv/versions/3.9.16/lib/libpython3.9.dylib\npythonhome:     /Users/brianleung/.virtualenvs/r-reticulate:/Users/brianleung/.virtualenvs/r-reticulate\nversion:        3.9.16 (main, Mar 20 2023, 20:22:25)  [Clang 14.0.0 (clang-1400.0.29.202)]\nnumpy:          /Users/brianleung/.virtualenvs/r-reticulate/lib/python3.9/site-packages/numpy\nnumpy_version:  1.26.4\n\nNOTE: Python version was forced by VIRTUAL_ENV\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom transformers import pipeline\nimport os\nos.environ[\"TOKENIZERS_PARALLELISM\"] = \"false\"\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n# import torch\n# if torch.backends.mps.is_available():\n#     mps_device = torch.device(\"mps\")\n#     x = torch.ones(1, device=mps_device)\n#     print (x)\n# else:\n#     print (\"MPS device not found.\")\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\ntext = \"Angela Merkel is a politician in Germany and leader of the CDU\"\nhypothesis_template = \"This example is about {}\"\nclasses_verbalized = [\"politics\", \"economy\", \"entertainment\", \"environment\"]\nzeroshot_classifier = pipeline(\"zero-shot-classification\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNo model was supplied, defaulted to facebook/bart-large-mnli and revision c626438 (https://huggingface.co/facebook/bart-large-mnli).\nUsing a pipeline without specifying a model name and revision in production is not recommended.\n```\n:::\n\n```{.python .cell-code}\noutput = zeroshot_classifier(text, classes_verbalized, hypothesis_template=hypothesis_template, multi_label=False)\nprint(output)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{'sequence': 'Angela Merkel is a politician in Germany and leader of the CDU', 'labels': ['politics', 'environment', 'economy', 'entertainment'], 'scores': [0.8386107087135315, 0.06258320808410645, 0.0585179440677166, 0.040288202464580536]}\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\noutput <- py$output\noutput %>%\n  bind_rows() %>%\n  pivot_wider(id_cols = sequence, names_from = labels, values_from = scores)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n  sequence                            politics environment economy entertainment\n  <chr>                                  <dbl>       <dbl>   <dbl>         <dbl>\n1 Angela Merkel is a politician in G…    0.839      0.0626  0.0585        0.0403\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}